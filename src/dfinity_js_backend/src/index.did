service: () -> {
    addIngredient: (record {name:text; unit:text; quantity:nat64}) -> (variant {Ok:record {id:text; name:text; unit:text; quantity:nat64}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}});
    addIngredientToRecipe: (text, text) -> (variant {Ok:record {id:text; name:text; description:text; author:text; steps:vec record {id:text; step:text}; category:text; ingredients:vec record {id:text; name:text; unit:text; quantity:nat64}}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}});
    addRecipe: (record {name:text; description:text; author:text; category:text}) -> (variant {Ok:record {id:text; name:text; description:text; author:text; steps:vec record {id:text; step:text}; category:text; ingredients:vec record {id:text; name:text; unit:text; quantity:nat64}}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}});
    addStepToRecipe: (text, text) -> (variant {Ok:record {id:text; name:text; description:text; author:text; steps:vec record {id:text; step:text}; category:text; ingredients:vec record {id:text; name:text; unit:text; quantity:nat64}}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}});
    deleteIngredient: (text) -> (variant {Ok:record {id:text; name:text; unit:text; quantity:nat64}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}});
    deleteRecipe: (text) -> (variant {Ok:record {id:text; name:text; description:text; author:text; steps:vec record {id:text; step:text}; category:text; ingredients:vec record {id:text; name:text; unit:text; quantity:nat64}}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}});
    getIngredient: (text) -> (variant {Ok:record {id:text; name:text; unit:text; quantity:nat64}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}}) query;
    getIngredients: () -> (vec record {id:text; name:text; unit:text; quantity:nat64}) query;
    getRecipe: (text) -> (variant {Ok:record {id:text; name:text; description:text; author:text; steps:vec record {id:text; step:text}; category:text; ingredients:vec record {id:text; name:text; unit:text; quantity:nat64}}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}}) query;
    getRecipes: () -> (vec record {id:text; name:text; description:text; author:text; steps:vec record {id:text; step:text}; category:text; ingredients:vec record {id:text; name:text; unit:text; quantity:nat64}}) query;
    getSteps: () -> (vec record {id:text; step:text}) query;
    removeIngredientFromRecipe: (text, text) -> (variant {Ok:record {id:text; name:text; description:text; author:text; steps:vec record {id:text; step:text}; category:text; ingredients:vec record {id:text; name:text; unit:text; quantity:nat64}}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}});
    removeStepFromRecipe: (text, text) -> (variant {Ok:record {id:text; name:text; description:text; author:text; steps:vec record {id:text; step:text}; category:text; ingredients:vec record {id:text; name:text; unit:text; quantity:nat64}}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}});
    searchRecipes: (text) -> (variant {Ok:vec record {id:text; name:text; description:text; author:text; steps:vec record {id:text; step:text}; category:text; ingredients:vec record {id:text; name:text; unit:text; quantity:nat64}}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}}) query;
    sortRecipesByCategory: (text) -> (vec record {id:text; name:text; description:text; author:text; steps:vec record {id:text; step:text}; category:text; ingredients:vec record {id:text; name:text; unit:text; quantity:nat64}}) query;
    updateIngredient: (record {id:text; name:text; unit:text; quantity:nat64}) -> (variant {Ok:record {id:text; name:text; unit:text; quantity:nat64}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}});
    updateRecipe: (record {id:text; name:text; description:text; author:text; steps:vec record {id:text; step:text}; category:text; ingredients:vec record {id:text; name:text; unit:text; quantity:nat64}}) -> (variant {Ok:record {id:text; name:text; description:text; author:text; steps:vec record {id:text; step:text}; category:text; ingredients:vec record {id:text; name:text; unit:text; quantity:nat64}}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}});
}
